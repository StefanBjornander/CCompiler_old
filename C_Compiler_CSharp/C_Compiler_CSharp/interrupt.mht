From: "Sparad av WINDOWS Internet Explorer 7"
Subject: DOS Interrupts
Date: Mon, 21 Dec 2009 15:15:39 +0100
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CA8250.742B9BD0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.0.6001.18049

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CA8250.742B9BD0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://spike.scu.edu.au/~barry/interrupts.html

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>DOS Interrupts</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<META content=3D"" name=3DAuthor>
<META content=3D"MSHTML 6.00.6001.18349" name=3DGENERATOR></HEAD>
<BODY text=3D#000000 vLink=3D#551a8b aLink=3D#ff0000 link=3D#0000ee =
bgColor=3D#ffffff>
<P><B><FONT size=3D+3>DOS INT 21h - DOS Function Codes</FONT></B></P>
<P>The follow abridged list of DOS interrupts has been extracted from a =
large=20
list compiled by Ralf Brown. These are available on any Simtel mirror =
(e.g. <A=20
href=3D"http://sunsite.anu.edu.au/archives">sunsite.anu.edu.au</A>) =
under the=20
directory ms-dos/info/interNNp.zip</P>
<P><A name=3DIndex></A></P>
<TABLE bgColor=3D#ffff80 border=3D3>
  <TBODY>
  <TR>
    <TD><B>AH</B></TD>
    <TD><B>Description</B></TD>
    <TD><B>AH</B></TD>
    <TD><B>Description</B></TD></TR>
  <TR>
    <TD>01</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah01">Read=20
      character from STDIN</A></TD>
    <TD>02</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah02">Write=20
      character to STDOUT</A></TD></TR>
  <TR>
    <TD>05</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah05">Write=20
      character to printer</A></TD>
    <TD>06</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah06">Console=20
      Input/Output</A></TD></TR>
  <TR>
    <TD>07</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah07">Direct=20
      char read (STDIN), no echo</A></TD>
    <TD>08</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah08">Char=20
      read from STDIN, no echo</A></TD></TR>
  <TR>
    <TD>09</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah09">Write=20
      string to STDOUT</A></TD>
    <TD>0A</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah0a">Buffered=20
      input</A></TD></TR>
  <TR>
    <TD>0B</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah0b">Get=20
      STDIN status</A></TD>
    <TD>0C</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah0c">Flush=20
      buffer for STDIN</A></TD></TR>
  <TR>
    <TD>0D</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah0d">Disk=20
      reset</A></TD>
    <TD>0E</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah0e">Select=20
      default drive</A></TD></TR>
  <TR>
    <TD>19</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah19h">Get=20
      current default drive</A></TD>
    <TD>25</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah25">Set=20
      interrupt vector</A></TD></TR>
  <TR>
    <TD>2A</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah2a">Get=20
      system date</A></TD>
    <TD>2B</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah2b">Set=20
      system date</A></TD></TR>
  <TR>
    <TD>2C</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah2c">Get=20
      system time</A></TD>
    <TD>2D</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah2D">Set=20
      system time</A></TD></TR>
  <TR>
    <TD>2E</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah2e">Set=20
      verify flag</A></TD>
    <TD>30</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah30">Get DOS=20
      version</A></TD></TR>
  <TR>
    <TD>35</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah35">Get=20
      Interrupt vector</A></TD></TR>
  <TR>
    <TD>36</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah36">Get free=20
      disk space</A></TD>
    <TD>39</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah39">Create=20
      subdirectory</A></TD></TR>
  <TR>
    <TD>3A</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah3a">Remove=20
      subdirectory</A></TD>
    <TD>3B</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah3b">Set=20
      working directory</A></TD></TR>
  <TR>
    <TD>3C</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah3c">Create=20
      file</A></TD>
    <TD>3D</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah3d">Open=20
      file</A></TD></TR>
  <TR>
    <TD>3E</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah3e">Close=20
      file</A></TD>
    <TD>3F</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah3f">Read=20
      file</A></TD></TR>
  <TR>
    <TD>40</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah40">Write=20
      file</A></TD>
    <TD>41</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah41">Delete=20
      file</A></TD></TR>
  <TR>
    <TD>42</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah42">Seek=20
      file</A></TD>
    <TD>43</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah43">Get/Set=20
      file attributes</A></TD></TR>
  <TR>
    <TD>47</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah47">Get=20
      current directory</A></TD>
    <TD>4C</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah4c">Exit=20
      program</A></TD></TR>
  <TR>
    <TD>4D</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah4d">Get=20
      return code</A></TD>
    <TD>54</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah54">Get=20
      verify flag</A></TD></TR>
  <TR>
    <TD>56</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah56">Rename=20
      file</A></TD>
    <TD>57</TD>
    <TD><A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#ah57">Get/Set=20
      file date</A></TD></TR></TBODY></TABLE>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah01></A><B><FONT size=3D+1>AH =3D 01h - READ CHARACTER FROM =
STANDARD INPUT,=20
WITH ECHO</FONT></B></P>
<P>Return: AL =3D character read</P>
<P>Notes:</P>
<UL>
  <LI>^C/^Break are checked=20
  <LI>^P toggles the DOS-internal echo-to-printer flag=20
  <LI>^Z is not interpreted, thus not causing an EOF if input is =
redirected=20
  character is echoed to standard output </LI></UL>
<P>SeeAlso: AH=3D06h,AH=3D07h,AH=3D08h,AH=3D0Ah</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah02></A><B><FONT size=3D+1>AH =3D 02h -WRITE CHARACTER TO =
STANDARD=20
OUTPUT</FONT></B></P>
<P>Entry: DL =3D character to write</P>
<P>Return: AL =3D last character output</P>
<P>Notes:</P>
<UL>
  <LI>^C/^Break are checked=20
  <LI>the last character output will be the character in DL unless =
DL=3D09h on=20
  entry, in which case AL=3D20h as tabs are expanded to blanks=20
  <LI>if standard output is redirected to a file, no error checks =
(write-=20
  protected, full media, etc.) are performed </LI></UL>
<P>SeeAlso: AH=3D06h,AH=3D09h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah05></A><B><FONT size=3D+1>AH =3D 05h - WRITE CHARACTER TO=20
PRINTER</FONT></B></P>
<P>Entry: DL =3D character to print</P>
<P>Notes:</P>
<UL>
  <LI>keyboard checked for ^C/^Break=20
  <LI>STDPRN is usually the first parallel port, but may be redirected =
under DOS=20
  2+=20
  <LI>if the printer is busy, this function will wait </LI></UL>
<P>SeeAlso: INT 17/AH=3D00h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah06></A><B><FONT size=3D+1>AH =3D 06h - DIRECT CONSOLE =
OUTPUT</FONT></B></P>
<P>Entry: DL =3D character (except FFh)</P>
<P>Return: AL =3D character output</P>
<P>Notes: does not check ^C/^Break</P>
<P>SeeAlso: AH=3D02h,AH=3D09h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah07></A><B><FONT size=3D+1>AH =3D 06h - DIRECT CONSOLE =
INPUT</FONT></B></P>
<P>Entry: AH =3D 06h DL =3D FFh</P>
<P>Return:</P>
<UL>
  <LI>ZF <I>set</I> if no character available and AL =3D 00h=20
  <LI>ZF <I>clear</I> if character available AL =3D character read =
</LI></UL>
<P>Notes:</P>
<UL>
  <LI>^C/^Break are NOT checked=20
  <LI>if the returned character is 00h, the user pressed a key with an =
extended=20
  keycode, which will be returned by the next call of this function=20
  <LI>although the return of AL=3D00h when no characters are available =
is not=20
  documented, some programs rely on this behavior </LI></UL>
<P>SeeAlso: AH=3D0Bh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah07></A><B><FONT size=3D+1>AH=3D07h - DIRECT CHARACTER INPUT, =
WITHOUT=20
ECHO</FONT></B></P>
<P>Return: AL =3D character read from standard input</P>
<P>Notes: does not check ^C/^Break</P>
<P>SeeAlso: AH=3D01h,AH=3D06h,AH=3D08h,AH=3D0Ah</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah08></A><B><FONT size=3D+1>AH =3D 08h - CHARACTER INPUT WITHOUT=20
ECHO</FONT></B></P>
<P>Return: AL =3D character read from standard input</P>
<P>Notes: ^C/^Break are checked</P>
<P>SeeAlso: AH=3D01h,AH=3D06h,AH=3D07h,AH=3D0Ah,AH=3D64h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah09></A><B><FONT size=3D+1>AH =3D 09h - WRITE STRING TO STANDARD =

OUTPUT</FONT></B></P>
<P>Entry: DS:DX -&gt; '$'-terminated string</P>
<P>Return: AL =3D 24h</P>
<P>Notes: ^C/^Break are checked</P>
<P>SeeAlso: AH=3D02h,AH=3D06h"OUTPUT"</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah0a></A><B><FONT size=3D+1>AH =3D 0Ah - BUFFERED =
INPUT</FONT></B></P>
<P>Entry: DS:DX -&gt; <A=20
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#dosbuf">buffer =
(see=20
below</A>)</P>
<P>Return: buffer filled with user input</P>
<P>Notes:</P>
<UL>
  <LI>^C/^Break are checked=20
  <LI>reads from standard input </LI></UL>
<P>SeeAlso: AH=3D0Ch</P>
<P><A name=3Ddosbuf></A>Format of DOS input buffer:</P>
<TABLE cellSpacing=3D2 cellPadding=3D2 border=3D2>
  <TBODY>
  <TR>
    <TD><B>Offset</B></TD>
    <TD><B>Size</B></TD>
    <TD><B>Description</B></TD></TR>
  <TR>
    <TD>00</TD>
    <TD>1</TD>
    <TD>maximum characters buffer can hold</TD></TR>
  <TR>
    <TD>01</TD>
    <TD>1</TD>
    <TD>number of chars from last input which may be recalled OR number =
of=20
      characters actually read, excluding CR</TD></TR>
  <TR>
    <TD>02</TD>
    <TD>n</TD>
    <TD>actual characters read, including the final carriage=20
  return</TD></TR></TBODY></TABLE>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah0b></A><B><FONT size=3D+1>AH=3D0Bh - GET STDIN =
STATUS</FONT></B></P>
<P>Return:</P>
<UL>
  <LI>AL =3D 00h if no character available=20
  <LI>AL =3D FFh if character is available </LI></UL>
<P>Notes: ^C/^Break are checked</P>
<P>SeeAlso: AH=3D06h"INPUT"</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah0c></A><B><FONT size=3D+1>AH =3D 0Ch - FLUSH BUFFER AND READ =
STANDARD=20
INPUT</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>AL =3D STDIN input function to execute after flushing buffer=20
  <LI>other registers as appropriate for the input function </LI></UL>
<P>Return: as appropriate for the specified input function</P>
<P>Note: if AL is not one of 01h,06h,07h,08h, or 0Ah, the buffer is =
flushed but=20
no input is attempted</P>
<P>SeeAlso: AH=3D01h,AH=3D06h"INPUT",AH=3D07h,AH=3D08h,AH=3D0Ah</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah0d></A><B><FONT size=3D+1>AH =3D 0Dh - DISK =
RESET</FONT></B></P>
<P>Notes: This function writes all modified disk buffers to disk, but =
does not=20
update the directory information</P>
<P>SeeAlso: AX=3D5D01h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah0e></A><B><FONT size=3D+1>AH =3D 0Eh - SELECT DEFAULT =
DRIVE</FONT></B></P>
<P>Entry: DL =3D new default drive (0=3DA:, 1=3DB:, etc)</P>
<P>Return: AL =3D number of potentially valid drive letters</P>
<P>Notes: the return value is the highest drive present</P>
<P>SeeAlso: AH=3D19h,AH=3D3Bh,AH=3DDBh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah19h></A><B><FONT size=3D+1>AH =3D 19h - GET CURRENT DEFAULT=20
DRIVE</FONT></B></P>
<P>Return: AL =3D drive (0=3DA:, 1=3DB:, etc)</P>
<P>SeeAlso: AH=3D0Eh,AH=3D47h,AH=3DBBh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah25></A><B><FONT size=3D+1>AH =3D 25h - SET INTERRUPT =
VECTOR</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>AL =3D interrupt number=20
  <LI>DS:DX -&gt; new interrupt handler </LI></UL>
<P>Notes: this function is preferred over direct modification of the =
interrupt=20
vector table</P>
<P>SeeAlso: AX=3D2501h,AH=3D35h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah2a></A><B><FONT size=3D+1>AH =3D 2Ah - GET SYSTEM =
DATE</FONT></B></P>
<P>Return: CX =3D year (1980-2099) DH =3D month DL =3D day AL =3D day of =
week=20
(00h=3DSunday)</P>
<P>SeeAlso: AH=3D2Bh"DOS",AH=3D2Ch,AH=3DE7h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah2b></A><B><FONT size=3D+1>AH =3D 2Bh - SET SYSTEM =
DATE</FONT></B></P>
<P>Entry: CX =3D year (1980-2099) DH =3D month DL =3D day</P>
<P>Return:</P>
<UL>
  <LI>AL =3D 00 successful=20
  <LI>FFh invalid date, system date unchanged </LI></UL>
<P>Note: DOS 3.3+ also sets CMOS clock</P>
<P>SeeAlso: AH=3D2Ah,AH=3D2Dh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah2c></A><B><FONT size=3D+1>AH =3D 2Ch - GET SYSTEM =
TIME</FONT></B></P>
<P>Return: CH =3D hour CL =3D minute DH =3D second DL =3D 1/100 =
seconds</P>
<P>Note: on most systems, the resolution of the system clock is about =
5/100sec,=20
so returned times generally do not increment by 1 on some systems, DL =
may always=20
return 00h</P>
<P>SeeAlso: AH=3D2Ah,AH=3D2Dh,AH=3DE7h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah2D></A><B><FONT size=3D+1>AH =3D 2Dh - SET SYSTEM =
TIME</FONT></B></P>
<P>Entry: CH =3D hour CL =3D minute DH =3D second DL =3D 1/100 =
seconds</P>
<P>Return:</P>
<UL>
  <LI>AL =3D 00h successful=20
  <LI>FFh if invalid time, system time unchanged </LI></UL>
<P>Note: DOS 3.3+ also sets CMOS clock</P>
<P>SeeAlso: AH=3D2Bh"DOS",AH=3D2Ch</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah2e></A><B><FONT size=3D+1>AH =3D 2Eh - SET VERIFY =
FLAG</FONT></B></P>
<P>Entry: AL =3D new state of verify flag (00 off, 01h o)</P>
<P>Notes:</P>
<UL>
  <LI>default state at system boot is OFF=20
  <LI>when ON, all disk writes are verified provided the device driver =
supports=20
  read-after-write verification </LI></UL>
<P>SeeAlso: AH=3D54h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah30></A><B><FONT size=3D+1>AH=3D30h - GET DOS =
VERSION</FONT></B></P>
<P>Entry: AL =3D what to return in BH (00h OEM number, 01h version =
flag)</P>
<P>Return:</P>
<UL>
  <LI>AL =3D major version number (00h if DOS 1.x)=20
  <LI>AH =3D minor version number=20
  <LI>BL:CX =3D 24-bit user serial number (most versions do not use =
this) if DOS=20
  &lt;5 or AL=3D00h=20
  <LI>BH =3D MS-DOS OEM number if DOS 5+ and AL=3D01h=20
  <LI>BH =3D version flag bit 3: DOS is in ROM other: reserved (0) =
</LI></UL>
<P>Notes:</P>
<UL>
  <LI>DOS 4.01 and 4.02 identify themselves as version 4.00=20
  <LI>MS-DOS 6.21 reports its version as 6.20; version 6.22 returns the =
correct=20
  value=20
  <LI>Windows95 returns version 7.00 (the underlying MS-DOS) </LI></UL>
<P>SeeAlso: AX=3D3000h/BX=3D3000h,AX=3D3306h,AX=3D4452h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah35></A><B><FONT size=3D+1>AH=3D35h - GET INTERRUPT =
VECTOR</FONT></B></P>
<P>Entry: AL =3D interrupt number</P>
<P>Return: ES:BX -&gt; current interrupt handler</P>
<P>SeeAlso: AH=3D25h,AX=3D2503h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah36></A><B><FONT size=3D+1>AH =3D 36h - GET FREE DISK =
SPACE</FONT></B></P>
<P>Entry: DL =3D drive number (0=3Ddefault, 1=3DA:, etc)</P>
<P>Return:</P>
<UL>
  <LI>AX =3D FFFFh if invalid drive=20
  <LI>AX =3D sectors per cluster BX =3D number of free clusters CX =3D =
bytes per=20
  sector DX =3D total clusters on drive </LI></UL>
<P>Notes:</P>
<UL>
  <LI>free space on drive in bytes is AX * BX * CX=20
  <LI>total space on drive in bytes is AX * CX * DX=20
  <LI>"lost clusters" are considered to be in use=20
  <LI>this function does not return proper results on CD-ROMs; use=20
  AX=3D4402h"CD-ROM" instead </LI></UL>
<P>SeeAlso: AH=3D1Bh,AH=3D1Ch,AX=3D4402h"CD-ROM"</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah39></A><B><FONT size=3D+1>AH =3D 39h - "MKDIR" - CREATE=20
SUBDIRECTORY</FONT></B></P>
<P>Entry: DS:DX -&gt; ASCIZ pathname</P>
<P>Return:</P>
<UL>
  <LI>CF clear if successful AX destroyed=20
  <LI>CF set on error AX =3D error code (03h,05h) </LI></UL>
<P>Notes:</P>
<UL>
  <LI>all directories in the given path except the last must exist=20
  <LI>fails if the parent directory is the root and is full=20
  <LI>DOS 2.x-3.3 allow the creation of a directory sufficiently deep =
that it is=20
  not possible to make that directory the current directory because the =
path=20
  would exceed 64 characters </LI></UL>
<P>SeeAlso: AH=3D3Ah,AH=3D3Bh,AH=3D6Dh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah3a></A><B><FONT size=3D+1>AH =3D 3Ah - "RMDIR" - REMOVE=20
SUBDIRECTORY</FONT></B></P>
<P>Entry: DS:DX -&gt; ASCIZ pathname of directory to be removed</P>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, AX destroyed=20
  <LI>CF set on error AX =3D error code (03h,05h,06h,10h) </LI></UL>
<P>Notes: directory must be empty (contain only '.' and '..' =
entries)</P>
<P>SeeAlso: AH=3D39h,AH=3D3Bh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah3b></A><B><FONT size=3D+1>AH =3D 3Bh - "CHDIR" - SET CURRENT=20
DIRECTORY</FONT></B></P>
<P>Entry: DS:DX -&gt; ASCIZ pathname to become current directory (max 64 =

bytes)</P>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, AX destroyed=20
  <LI>CF set on error AX =3D error code (03h) </LI></UL>
<P>Notes: if new directory name includes a drive letter, the default =
drive is=20
not changed, only the current directory on that drive</P>
<P>SeeAlso: AH=3D47h,AH=3D71h,INT 2F/AX=3D1105h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah3c></A><B><FONT size=3D+1>AH =3D 3Ch - "CREAT" - CREATE OR =
TRUNCATE=20
FILE</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>CX =3D <A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#fattr">file=20
  attributes</A>=20
  <LI>DS:DX -&gt; ASCIZ filename </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, AX =3D file handle=20
  <LI>CF set on error AX =3D error code (03h,04h,05h) </LI></UL>
<P>Notes: if a file with the given name exists, it is truncated to zero=20
length</P>
<P>SeeAlso: AH=3D16h,AH=3D3Dh,AH=3D5Ah,AH=3D5Bh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah3d></A><B><FONT size=3D+1>AH =3D 3Dh - "OPEN" - OPEN EXISTING=20
FILE</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>AL =3D access and sharing modes=20
  <LI>DS:DX -&gt; ASCIZ filename </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, AX =3D file handle=20
  <LI>CF set on error AX =3D error code (01h,02h,03h,04h,05h,0Ch,56h) =
</LI></UL>
<P>Notes:</P>
<UL>
  <LI>file pointer is set to start of file=20
  <LI>file handles which are inherited from a parent also inherit =
sharing and=20
  access restrictions=20
  <LI>files may be opened even if given the hidden or system attributes =
</LI></UL>
<P>SeeAlso: AH=3D0Fh,AH=3D3Ch,AX=3D4301h,AX=3D5D00h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah3e></A><B><FONT size=3D+1>AH =3D 3Eh - "CLOSE" - CLOSE =
FILE</FONT></B></P>
<P>Entry: BX =3D file handle</P>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, AX destroyed=20
  <LI>CF set on error, AX =3D error code (06h) </LI></UL>
<P>Note: if the file was written to, any pending disk writes are =
performed, the=20
time and date stamps are set to the current time, and the directory =
entry is=20
updated</P>
<P>SeeAlso: AH=3D10h,AH=3D3Ch,AH=3D3Dh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah3f></A><B><FONT size=3D+1>AH =3D 3Fh - "READ" - READ FROM FILE =
OR=20
DEVICE</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>BX =3D file handle=20
  <LI>CX =3D number of bytes to read=20
  <LI>DS:DX -&gt; buffer for data </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful - AX =3D number of bytes actually read (0 =
if at EOF=20
  before call)=20
  <LI>CF set on error AX =3D error code (05h,06h) </LI></UL>
<P>Notes:</P>
<UL>
  <LI>data is read beginning at current file position, and the file =
position is=20
  updated after a successful read=20
  <LI>the returned AX may be smaller than the request in CX if a partial =
read=20
  occurred=20
  <LI>if reading from CON, read stops at first CR </LI></UL>
<P>SeeAlso: AH=3D27h,AH=3D40h,AH=3D93h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah40></A><B><FONT size=3D+1>AH=3D40h - "WRITE" - WRITE TO FILE OR =

DEVICE</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>BX =3D file handle=20
  <LI>CX =3D number of bytes to write=20
  <LI>DS:DX -&gt; data to write </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful -AX =3D number of bytes actually written=20
  <LI>CF set on error - AX =3D error code (05h,06h) </LI></UL>
<P>Notes:</P>
<UL>
  <LI>if CX is zero, no data is written, and the file is truncated or =
extended=20
  to the current position=20
  <LI>data is written beginning at the current file position, and the =
file=20
  position is updated after a successful write=20
  <LI>the usual cause for AX &lt; CX on return is a full disk </LI></UL>
<P>SeeAlso: AH=3D28h,AH=3D3Fh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah41></A><B><FONT size=3D+1>AH =3D 41H - "UNLINK" - DELETE =
FILE</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>DS:DX -&gt; ASCIZ filename (no wildcards, but see notes)=20
  <LI>CL =3D attribute mask for deletion (server call only, see notes) =
</LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, AX destroyed (DOS 3.3) AL seems to be =
drive of=20
  deleted file=20
  <LI>CF set on error AX =3D error code (02h,03h,05h) </LI></UL>
<P>Notes:</P>
<UL>
  <LI>(DOS 3.1+) wildcards are allowed if invoked via AX=3D5D00h, in =
which case=20
  the filespec must be canonical (as returned by AH=3D60h), and only =
files=20
  matching the attribute mask in CL are deleted=20
  <LI>DOS does not erase the file's data; it merely becomes inaccessible =
because=20
  the FAT chain for the file is cleared=20
  <LI>deleting a file which is currently open may lead to filesystem =
corruption.=20
  </LI></UL>
<P>SeeAlso: =
AH=3D13h,AX=3D4301h,AX=3D4380h,AX=3D5D00h,AH=3D60h,AH=3D71h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah42></A><B><FONT size=3D+1>AH=3D42h - "LSEEK" - SET CURRENT FILE =

POSITION</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>AL =3D origin of move 00h start of file 01h current file position =
02h end of=20
  file=20
  <LI>BX =3D file handle=20
  <LI>CX:DX =3D offset from origin of new file position </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, DX:AX =3D new file position in bytes from =
start of=20
  file=20
  <LI>CF set on error, AX =3D error code (01h,06h) </LI></UL>
<P>Notes:</P>
<UL>
  <LI>for origins 01h and 02h, the pointer may be positioned before the =
start of=20
  the file; no error is returned in that case, but subsequent attempts =
at I/O=20
  will produce errors=20
  <LI>if the new position is beyond the current end of file, the file =
will be=20
  extended by the next write (see AH=3D40h) </LI></UL>
<P>SeeAlso: AH=3D24h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah43></A><B><FONT size=3D+1>AH=3D43 - GET FILE =
ATTRIBUTES</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>AL =3D 00h=20
  <LI>DS:DX -&gt; ASCIZ filename </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful CX =3D <A=20
  href=3D"http://spike.scu.edu.au/~barry/interrupts.html#fattr">file=20
  attributes</A>=20
  <LI>CF set on error, AX =3D error code (01h,02h,03h,05h) </LI></UL>
<P>BUG: Windows for Workgroups returns error code 05h (access denied) =
instead of=20
error code 02h (file not found) when attempting to get the attributes of =
a=20
nonexistent file.</P>
<P>SeeAlso: AX=3D4301h,AX=3D4310h,AX=3D7143h,AH=3DB6h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><B><FONT=20
size=3D+1>AH=3D43 - "CHMOD" - SET FILE ATTRIBUTES</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>AL =3D 01h=20
  <LI>CX =3D new <A=20
  href=3D"http://spike.scu.edu.au/~barry/interrupts.html#fattr">file=20
  attributes</A>=20
  <LI>DS:DX -&gt; ASCIZ filename </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, AX destroyed=20
  <LI>CF set on error, AX =3D error code (01h,02h,03h,05h) </LI></UL>
<P>Notes:</P>
<UL>
  <LI>will not change volume label or directory attribute bits, but will =
change=20
  the other attribute bits of a directory=20
  <LI>MS-DOS 4.01 reportedly closes the file if it is currently open =
</LI></UL>
<P>SeeAlso: AX=3D4300h,AX=3D4311h,AX=3D7143h,INT 2F/AX=3D110Eh</P>
<P><A name=3Dfattr></A>Bitfields for file attributes:</P>
<TABLE cellSpacing=3D2 cellPadding=3D2 border=3D2>
  <TBODY>
  <TR>
    <TD><B>Bits</B></TD>
    <TD>7</TD>
    <TD>6</TD>
    <TD>5</TD>
    <TD>4</TD>
    <TD>3</TD>
    <TD>2</TD>
    <TD>1</TD>
    <TD>0</TD></TR>
  <TR>
    <TD><B>Description</B></TD>
    <TD>shareable</TD>
    <TD>-</TD>
    <TD>archive</TD>
    <TD>directory</TD>
    <TD>vol. label</TD>
    <TD>system</TD>
    <TD>hidden</TD>
    <TD>read-only</TD></TR></TBODY></TABLE>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah47></A><B><FONT size=3D+1>AH =3D 47h - "CWD" - GET CURRENT=20
DIRECTORY</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>DL =3D drive number (00h =3D default, 01h =3D A:, etc)=20
  <LI>DS:SI -&gt; 64-byte buffer for ASCIZ pathname </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful=20
  <LI>CF set on error, AX =3D error code (0Fh) </LI></UL>
<P>Notes:</P>
<UL>
  <LI>the returned path does not include a drive or the initial =
backslash=20
  <LI>many Microsoft products for Windows rely on AX being 0100h on =
success=20
</LI></UL>
<P>SeeAlso: AH=3D19h,AH=3D3Bh,AH=3D71h</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah4c></A><B><FONT size=3D+1>AH =3D 4Ch - "EXIT" - TERMINATE WITH =
RETURN=20
CODE</FONT></B></P>
<P>Entry: AL =3D return code</P>
<P>Return: never returns</P>
<P>Notes: unless the process is its own parent, all open files are =
closed and=20
all memory belonging to the process is freed</P>
<P>SeeAlso: AH=3D00h,AH=3D26h,AH=3D4Bh,AH=3D4Dh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah4d></A><B><FONT size=3D+1>AH =3D 4Dh - GET RETURN CODE=20
(ERRORLEVEL)</FONT></B></P>
<P>Return:</P>
<UL>
  <LI>AH =3D termination type (00=3Dnormal, 01h control-C abort, =
02h=3Dcritical error=20
  abort, 03h terminate and stay resident)=20
  <LI>AL =3D return code </LI></UL>
<P>Notes:</P>
<UL>
  <LI>the word in which DOS stores the return code is cleared after =
being read=20
  by this function, so the return code can only be retrieved once=20
  <LI>COMMAND.COM stores the return code of the last external command it =

  executed as ERRORLEVEL </LI></UL>
<P>SeeAlso: AH=3D4Bh,AH=3D4Ch,AH=3D8Ah</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah54></A><B><FONT size=3D+1>AH =3D 54h - GET VERIFY =
FLAG</FONT></B></P>
<P>Return: AL =3D verify flag (00h=3Doff, 01h=3Don, i.e. all disk writes =
verified=20
after writing)</P>
<P>SeeAlso: AH=3D2Eh</P>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah56></A><B><FONT size=3D+1>AH =3D 56h - "RENAME" - RENAME =
FILE</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>DS:DX -&gt; ASCIZ filename of existing file (no wildcards, but see =
below)=20
  <LI>ES:DI -&gt; ASCIZ new filename (no wildcards)=20
  <LI>CL =3D attribute mask (server call only, see below) </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful=20
  <LI>CF set on error, AX=3D error code (02h,03h,05h,11h) </LI></UL>
<P>Notes:</P>
<UL>
  <LI>allows move between directories on same logical volume=20
  <LI>this function does not set the archive attribute=20
  <LI>open files should not be renamed=20
  <LI>(DOS 3.0+) allows renaming of directories </LI></UL>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><A=20
name=3Dah57></A><B><FONT size=3D+1>AH =3D 57h - GET FILE'S LAST-WRITTEN =
DATE AND=20
TIME</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>AL =3D 00h (Get attribute)=20
  <LI>BX =3D file handle </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful, CX =3D file's time DX =3D file's date=20
  <LI>CF set on error, AX =3D error code (01h,06h) </LI></UL>
<P>SeeAlso: AX=3D5701h</P>
<P><A name=3Ddt></A>Bitfields for file time:</P>
<TABLE cellSpacing=3D2 cellPadding=3D2 border=3D2>
  <TBODY>
  <TR>
    <TD><B>Bits</B></TD>
    <TD>15-11</TD>
    <TD>10-5</TD>
    <TD>4-0</TD></TR>
  <TR>
    <TD><B>Description</B></TD>
    <TD>hours</TD>
    <TD>minutes</TD>
    <TD>seconds</TD></TR></TBODY></TABLE>
<P>Bitfields for file date:</P>
<TABLE cellSpacing=3D2 cellPadding=3D2 border=3D2>
  <TBODY>
  <TR>
    <TD><B>Bits</B></TD>
    <TD>15-9</TD>
    <TD>8-5</TD>
    <TD>4-0</TD></TR>
  <TR>
    <TD><B>Description</B></TD>
    <TD>year (1980-)</TD>
    <TD>month</TD>
    <TD>day</TD></TR></TBODY></TABLE>
<P><A href=3D"http://spike.scu.edu.au/~barry/interrupts.html#Index"><IMG =
height=3D23=20
alt=3D[Index] src=3D"http://spike.scu.edu.au/~barry/back.gif" =
width=3D20></A><B><FONT=20
size=3D+1>AH =3D 57h - SET FILE'S LAST-WRITTEN DATE AND =
TIME</FONT></B></P>
<P>Entry:</P>
<UL>
  <LI>AL =3D01h (Set attributes)=20
  <LI>BX =3D file handle=20
  <LI>CX =3D <A href=3D"http://spike.scu.edu.au/~barry/dt">new time</A>=20
  <LI>DX =3D <A =
href=3D"http://spike.scu.edu.au/~barry/interrupts.html#dt">new=20
  date</A> </LI></UL>
<P>Return:</P>
<UL>
  <LI>CF clear if successful=20
  <LI>CF set on error AX =3D error code (01h,06h) </LI></UL>
<P>SeeAlso: AX=3D5700h</P>
<P>
<HR width=3D"100%">

<P></P>
<P><I>This page is maintained by <A=20
href=3D"http://spike.scu.edu.au/~barry/index.html">Barry=20
Wilks</A>.</I></P></BODY></HTML>

------=_NextPart_000_0000_01CA8250.742B9BD0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://spike.scu.edu.au/~barry/back.gif

R0lGODlhKAAoAPcAAAAAAIAAAACAAICAAAAAgIAAgACAgICAgMDAwP8AAAD/AP//AAAA//8A/wD/
/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAZgAAmQAAzAAA/wAzAAAzMwAzZgAzmQAzzAAz/wBm
AABmMwBmZgBmmQBmzABm/wCZAACZMwCZZgCZmQCZzACZ/wDMAADMMwDMZgDMmQDMzADM/wD/AAD/
MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMzADMzMzMzZjMzmTMzzDMz/zNmADNmMzNm
ZjNmmTNmzDNm/zOZADOZMzOZZjOZmTOZzDOZ/zPMADPMMzPMZjPMmTPMzDPM/zP/ADP/MzP/ZjP/
mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2YzAGYzM2YzZmYzmWYzzGYz/2ZmAGZmM2ZmZmZmmWZm
zGZm/2aZAGaZM2aZZmaZmWaZzGaZ/2bMAGbMM2bMZmbMmWbMzGbM/2b/AGb/M2b/Zmb/mWb/zGb/
/5kAAJkAM5kAZpkAmZkAzJkA/5kzAJkzM5kzZpkzmZkzzJkz/5lmAJlmM5lmZplmmZlmzJlm/5mZ
AJmZM5mZZpmZmZmZzJmZ/5nMAJnMM5nMZpnMmZnMzJnM/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwA
M8wAZswAmcwAzMwA/8wzAMwzM8wzZswzmcwzzMwz/8xmAMxmM8xmZsxmmcxmzMxm/8yZAMyZM8yZ
ZsyZmcyZzMyZ/8zMAMzMM8zMZszMmczMzMzM/8z/AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8A
mf8AzP8A//8zAP8zM/8zZv8zmf8zzP8z//9mAP9mM/9mZv9mmf9mzP9m//+ZAP+ZM/+ZZv+Zmf+Z
zP+Z///MAP/MM//MZv/Mmf/MzP/M////AP//M///Zv//mf//zP///ywAAAAAKAAoAAAI1QD59RNI
cKDBgggPKkxYcKFDhg8jEoRIUaJFgRcVMtiYkWHFhBtDdlTYMaRJBiMnXjxp8qPDlSxFukRYMebJ
filxMrQZU2fHnTx7jlwYlKfPjyCLCs1IVKnNow+TOo3psulUqhKlXr1Z0eHNrUi9cuQnlGVVl0tb
Xpy5FKdYlA3RsnQLVSDXgWzn0tU4F6NcvVBtqvz4lK7dp34tGnVbdLDirSfjwoS8kWZGyjINjqTs
kWk/sC9nGpxKUTTCoBZzAh2bVbXrxKZf45UdGzbtn7dj504ZEAA7

------=_NextPart_000_0000_01CA8250.742B9BD0--
